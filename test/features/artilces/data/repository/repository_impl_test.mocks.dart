// Mocks generated by Mockito 5.0.15 from annotations
// in nyt_app/test/features/artilces/data/repository/repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nyt_app/core/error/failures.dart' as _i7;
import 'package:nyt_app/core/Network/network_info.dart' as _i2;
import 'package:nyt_app/features/articles/data/datasource/articles_remote_data_source.dart'
    as _i3;
import 'package:nyt_app/features/articles/data/repository/article_repository.dart'
    as _i5;
import 'package:nyt_app/features/articles/domain/entities/article.dart' as _i8;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeNetworkInfo_0 extends _i1.Fake implements _i2.NetworkInfo {}

class _FakeArticleRemoteDataSrouce_1 extends _i1.Fake
    implements _i3.ArticleRemoteDataSrouce {}

class _FakeEither_2<L, R> extends _i1.Fake implements _i4.Either<L, R> {}

/// A class which mocks [ArticleRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepositoryImpl extends _i1.Mock
    implements _i5.ArticleRepositoryImpl {
  MockArticleRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NetworkInfo get networkInfo =>
      (super.noSuchMethod(Invocation.getter(#networkInfo),
          returnValue: _FakeNetworkInfo_0()) as _i2.NetworkInfo);
  @override
  _i3.ArticleRemoteDataSrouce get remoteDataSrouce =>
      (super.noSuchMethod(Invocation.getter(#remoteDataSrouce),
              returnValue: _FakeArticleRemoteDataSrouce_1())
          as _i3.ArticleRemoteDataSrouce);
  @override
  _i6.Future<_i4.Either<_i7.Failure, List<_i8.Article>>> getMostPopularArticle(
          {required String type, required int days}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getMostPopularArticle, [], {#type: type, #days: days}),
          returnValue: Future<_i4.Either<_i7.Failure, List<_i8.Article>>>.value(
              _FakeEither_2<_i7.Failure, List<_i8.Article>>())) as _i6
          .Future<_i4.Either<_i7.Failure, List<_i8.Article>>>);
  @override
  _i6.Future<_i4.Either<_i7.Failure, List<_i8.Article>>> searchArticle(
          {required String query}) =>
      (super.noSuchMethod(
          Invocation.method(#searchArticle, [], {#query: query}),
          returnValue: Future<_i4.Either<_i7.Failure, List<_i8.Article>>>.value(
              _FakeEither_2<_i7.Failure, List<_i8.Article>>())) as _i6
          .Future<_i4.Either<_i7.Failure, List<_i8.Article>>>);
  @override
  String toString() => super.toString();
}
